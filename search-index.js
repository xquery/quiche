var N = null;var searchIndex = {};
searchIndex["quiche"]={"doc":"Savoury implementation of the QUIC transport protocol and…","items":[[3,"Config","quiche","Stores configuration shared between multiple connections.",N,N],[3,"Connection","","A QUIC connection.",N,N],[3,"Stats","","Statistics about the connection.",N,N],[12,"sent","","The number of QUIC packets sent on this connection.",0,N],[12,"lost","","The number of QUIC packets that were lost.",0,N],[12,"rtt","","The estimated round-trip time of the connection.",0,N],[3,"Header","","A QUIC packet's header.",N,N],[12,"ty","","The type of the packet.",1,N],[12,"version","","The version of the packet.",1,N],[12,"dcid","","The destination connection ID of the packet.",1,N],[12,"scid","","The source connection ID of the packet.",1,N],[12,"odcid","","The original destination connection ID. Only present in…",1,N],[12,"token","","The address verification token of the packet. Only present…",1,N],[12,"versions","","The list of versions in the packet. Only present in…",1,N],[3,"Readable","","An iterator over the streams that have outstanding data to…",N,N],[4,"Error","","A QUIC error.",N,N],[13,"Done","","There is no more work to do.",2,N],[13,"BufferTooShort","","The provided buffer is too short.",2,N],[13,"UnknownVersion","","The provided packet cannot be parsed because its version…",2,N],[13,"InvalidFrame","","The provided packet cannot be parsed because it contains…",2,N],[13,"InvalidPacket","","The provided packet cannot be parsed.",2,N],[13,"InvalidState","","The operation cannot be completed because the connection…",2,N],[13,"InvalidStreamState","","The operation cannot be completed because the stream is in…",2,N],[13,"InvalidTransportParam","","The peer's transport params cannot be parsed.",2,N],[13,"CryptoFail","","A cryptographic operation failed.",2,N],[13,"TlsFail","","The TLS handshake failed.",2,N],[13,"FlowControl","","The peer violated the local flow control limits.",2,N],[13,"StreamLimit","","The peer violated the local stream limits.",2,N],[13,"InvalidHuffmanEncoding","","The QPACK header block's huffman encoding is invalid.",2,N],[13,"InvalidStaticTableIndex","","The QPACK static table index provided doesn't exist.",2,N],[13,"InvalidHeaderValue","","The decoded QPACK header name or value is not valid.",2,N],[13,"FinalSize","","The received data exceeds the stream's final size.",2,N],[4,"Type","","QUIC packet type.",N,N],[13,"Initial","","",3,N],[13,"Retry","","",3,N],[13,"Handshake","","",3,N],[13,"ZeroRTT","","",3,N],[13,"VersionNegotiation","","",3,N],[13,"Application","","",3,N],[5,"accept","","Creates a new server-side connection.",N,N],[5,"connect","","Creates a new client-side connection.",N,N],[5,"negotiate_version","","Writes a version negotiation packet.",N,N],[5,"retry","","Writes a stateless retry packet.",N,N],[0,"h3","","HTTP/3 client and server.",N,N],[0,"qpack","quiche::h3","HTTP/3 header compression (QPACK).",N,N],[3,"Header","quiche::h3::qpack","A name-value pair representing a raw HTTP header.",N,N],[3,"Decoder","","A QPACK decoder.",N,N],[3,"Encoder","","A QPACK encoder.",N,N],[11,"new","","Creates a new QPACK decoder.",4,[[],["decoder"]]],[11,"control","","Processes control instructions from the encoder.",4,N],[11,"decode","","Decodes a QPACK header block into a list of headers.",4,N],[11,"new","","Creates a new QPACK encoder.",5,[[],["encoder"]]],[11,"encode","","Encodes a list of headers into a QPACK header block.",5,N],[11,"new","","Creates a new header.",6,[[["str"],["str"]],["header"]]],[11,"name","","Returns the header's name.",6,[[["self"]],["str"]]],[11,"value","","Returns the header's value.",6,[[["self"]],["str"]]],[11,"from_slice","quiche","Parses a QUIC packet header from the given buffer.",1,N],[6,"Result","","A specialized [`Result`] type for quiche operations.",N,N],[17,"VERSION_DRAFT18","","The current QUIC wire version.",N,N],[17,"MAX_CONN_ID_LEN","","The maximum length of a connection ID.",N,N],[11,"to_wire","","",2,[[["self"]],["u16"]]],[11,"new","","Creates a config object with the given version.",7,[[["u32"]],["result",["config"]]]],[11,"load_cert_chain_from_pem_file","","Configures the given certificate chain.",7,[[["self"],["str"]],["result"]]],[11,"load_priv_key_from_pem_file","","Configures the given private key.",7,[[["self"],["str"]],["result"]]],[11,"verify_peer","","Configures whether to verify the peer's certificate.",7,[[["self"],["bool"]]]],[11,"log_keys","","Enables logging of secrets.",7,[[["self"]]]],[11,"set_application_protos","","Configures the list of support application protocolos.",7,N],[11,"set_idle_timeout","","Sets the `idle_timeout` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_stateless_reset_token","","Sets the `stateless_reset_token` transport parameter.",7,N],[11,"set_max_packet_size","","Sets the `max_packet_size transport` parameter.",7,[[["self"],["u64"]]]],[11,"set_initial_max_data","","Sets the `initial_max_data` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_initial_max_stream_data_bidi_local","","Sets the `initial_max_stream_data_bidi_local` transport…",7,[[["self"],["u64"]]]],[11,"set_initial_max_stream_data_bidi_remote","","Sets the `initial_max_stream_data_bidi_remote` transport…",7,[[["self"],["u64"]]]],[11,"set_initial_max_stream_data_uni","","Sets the `initial_max_stream_data_uni` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_initial_max_streams_bidi","","Sets the `initial_max_streams_bidi` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_initial_max_streams_uni","","Sets the `initial_max_streams_uni` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_ack_delay_exponent","","Sets the `ack_delay_exponent` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_max_ack_delay","","Sets the `max_ack_delay` transport parameter.",7,[[["self"],["u64"]]]],[11,"set_disable_migration","","Sets the `disable_migration` transport parameter.",7,[[["self"],["bool"]]]],[11,"recv","","Processes QUIC packets received from the peer.",8,N],[11,"send","","Writes a single QUIC packet to be sent to the peer.",8,N],[11,"stream_recv","","Reads contiguous data from a stream into the provided slice.",8,N],[11,"stream_send","","Writes data to a stream.",8,N],[11,"readable","","Creates an iterator over streams that have outstanding…",8,[[["self"]],["readable"]]],[11,"timeout","","Returns the amount of time until the next timeout event.",8,[[["self"]],["option",["duration"]]]],[11,"on_timeout","","Processes a timeout event.",8,[[["self"]]]],[11,"close","","Closes the connection with the given error and reason.",8,N],[11,"trace_id","","Returns a string uniquely representing the connection.",8,[[["self"]],["str"]]],[11,"application_proto","","Returns the negotiated ALPN protocol.",8,N],[11,"is_established","","Returns true if the connection handshake is complete.",8,[[["self"]],["bool"]]],[11,"is_resumed","","Returns true if the connection is resumed.",8,[[["self"]],["bool"]]],[11,"is_closed","","Returns true if the connection is closed.",8,[[["self"]],["bool"]]],[11,"stats","","Collects and returns statistics about the connection.",8,[[["self"]],["stats"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","quiche::h3::qpack","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"next","quiche","",9,[[["self"]],["option"]]],[11,"eq","","",2,[[["self"],["error"]],["bool"]]],[11,"eq","quiche::h3::qpack","",6,[[["self"],["header"]],["bool"]]],[11,"ne","","",6,[[["self"],["header"]],["bool"]]],[11,"eq","quiche","",3,[[["self"],["type"]],["bool"]]],[11,"eq","","",1,[[["self"],["header"]],["bool"]]],[11,"ne","","",1,[[["self"],["header"]],["bool"]]],[11,"default","quiche::h3::qpack","",4,[[],["decoder"]]],[11,"default","","",5,[[],["encoder"]]],[11,"clone","quiche","",2,[[["self"]],["error"]]],[11,"clone","","",0,[[["self"]],["stats"]]],[11,"clone","quiche::h3::qpack","",6,[[["self"]],["header"]]],[11,"clone","quiche","",3,[[["self"]],["type"]]],[11,"clone","","",1,[[["self"]],["header"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","quiche::h3::qpack","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","quiche","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]]],"paths":[[3,"Stats"],[3,"Header"],[4,"Error"],[4,"Type"],[3,"Decoder"],[3,"Encoder"],[3,"Header"],[3,"Config"],[3,"Connection"],[3,"Readable"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
